crystal_doc_search_index_callback({"repository_name":"github.com/kimvex/cloudinary","body":"# cloudinary\n\n**THIS VERSION IS DEVELOPING**\n\nModule that allows uploading images to cloudinary in an easy way\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  cloudinary:\n    github: kimvex/cloudinary\n```\n\n## Usage\n\n```crystal\nrequire \"cloudinary\"\n```\n\n```\n  CLOUDINARY = Cloudinary::Connect.new(\"api_key\", \"cloud_name\", \"preset\")\n\n  server = HTTP::Server.new do |context|\n    response = CLOUDINARY.upload(\n      context,\n      \"test\"\n    )\n\n    context.response << response\n  end\n\n  server.bind_tcp 8085\n  server.listen\n```\n\n## Development\n\nTo upload images are authentication problems, you have to add a presets that give you that freedom\n\nGo to documentation of cloudinary [add-new-preset](https://cloudinary.com/documentation/upload_images#upload_presets)\n\n- Step 1: Enter the console of cloudinary\n- Step 2: Go to `settings`\n- Step 4: Go to the `upload` tab\n- Step 5: Go down to the section `Upload presets` and `add_upload_preset`\n- Step 6: You can add name to your preset or leave it with the name by default and then and **important** in `Signing Mode` choose it as `unsigned`\n\n## Contributing\n\n1. Fork it (<https://github.com/kimvex/cloudinary/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [kimvex](https://github.com/your-github-user) Benjamin de la cruz Martinez - creator, maintainer\n","program":{"html_id":"github.com/kimvex/cloudinary/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/kimvex/cloudinary","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/kimvex/cloudinary/Cloudinary","path":"Cloudinary.html","kind":"module","full_name":"Cloudinary","name":"Cloudinary","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cloudinary.cr","line_number":4,"url":"https://github.com/kimvex/cloudinary/blob/e406102ff8ba108055a2fa6e0327b564dbc2eded/src/cloudinary.cr"}],"repository_name":"github.com/kimvex/cloudinary","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/kimvex/cloudinary/Cloudinary/Connect","path":"Cloudinary/Connect.html","kind":"class","full_name":"Cloudinary::Connect","name":"Connect","abstract":false,"superclass":{"html_id":"github.com/kimvex/cloudinary/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/kimvex/cloudinary/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/kimvex/cloudinary/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cloudinary.cr","line_number":12,"url":"https://github.com/kimvex/cloudinary/blob/e406102ff8ba108055a2fa6e0327b564dbc2eded/src/cloudinary.cr"}],"repository_name":"github.com/kimvex/cloudinary","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/kimvex/cloudinary/Cloudinary","kind":"module","full_name":"Cloudinary","name":"Cloudinary"},"doc":"Adding module for upload image to cloudinary\nHas been add:\n- api_key => of acount on cloudinary\n- cloud_name => of cloud in the acount\n- preset => of preset that gives permission, read documentation of module or cloudinary","summary":"<p>Adding module for upload image to cloudinary Has been add: - api_key => of acount on cloudinary - cloud_name => of cloud in the acount - preset => of preset that gives permission, read documentation of module or cloudinary</p>","class_methods":[],"constructors":[{"id":"new(api_key=&quot;&quot;,cloud_name=&quot;&quot;,preset=&quot;&quot;)-class-method","html_id":"new(api_key=&amp;quot;&amp;quot;,cloud_name=&amp;quot;&amp;quot;,preset=&amp;quot;&amp;quot;)-class-method","name":"new","doc":"Create a instace\n\n```api_key``` => of acount on cloudinary\n\n```cloud_name``` => of cloud in the acount\n\npreset => of preset that gives permission, read documentation of module or cloudinary","summary":"<p>Create a instace</p>","abstract":false,"args":[{"name":"api_key","doc":null,"default_value":"\"\"","external_name":"api_key","restriction":""},{"name":"cloud_name","doc":null,"default_value":"\"\"","external_name":"cloud_name","restriction":""},{"name":"preset","doc":null,"default_value":"\"\"","external_name":"preset","restriction":""}],"args_string":"(api_key = <span class=\"s\">&quot;&quot;</span>, cloud_name = <span class=\"s\">&quot;&quot;</span>, preset = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/kimvex/cloudinary/blob/e406102ff8ba108055a2fa6e0327b564dbc2eded/src/cloudinary.cr#L25","source_link":"https://github.com/kimvex/cloudinary/blob/e406102ff8ba108055a2fa6e0327b564dbc2eded/src/cloudinary.cr#L25","def":{"name":"new","args":[{"name":"api_key","doc":null,"default_value":"\"\"","external_name":"api_key","restriction":""},{"name":"cloud_name","doc":null,"default_value":"\"\"","external_name":"cloud_name","restriction":""},{"name":"preset","doc":null,"default_value":"\"\"","external_name":"preset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(api_key, cloud_name, preset)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"upload(env,folder)-instance-method","html_id":"upload(env,folder)-instance-method","name":"upload","doc":"Upload image to server\n\n```env``` refers to context of server when make a request to endpoint\n\n```folder``` where the image is saved in the cloudinary\n\nExample:\n```\nserver = HTTP::Server.new do |context|\n  response = CLOUDINARY.upload(\n    context,\n    \"test\"\n  )\n\n  context.response << response\nend\n\nserver.bind_tcp 8085\nserver.listen\n```","summary":"<p>Upload image to server</p>","abstract":false,"args":[{"name":"env","doc":null,"default_value":"","external_name":"env","restriction":""},{"name":"folder","doc":null,"default_value":"","external_name":"folder","restriction":""}],"args_string":"(env, folder)","source_link":"https://github.com/kimvex/cloudinary/blob/e406102ff8ba108055a2fa6e0327b564dbc2eded/src/cloudinary.cr#L79","source_link":"https://github.com/kimvex/cloudinary/blob/e406102ff8ba108055a2fa6e0327b564dbc2eded/src/cloudinary.cr#L79","def":{"name":"upload","args":[{"name":"env","doc":null,"default_value":"","external_name":"env","restriction":""},{"name":"folder","doc":null,"default_value":"","external_name":"folder","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@folder = folder\nHTTP::FormData.parse(env.request) do |upload|\n  return self.engineUpload(upload)\nend\n"}}],"macros":[],"types":[]}]}]}})